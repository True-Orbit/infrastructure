name: Trigger Terraform Apply on Web's ECS Cluster

on:
  workflow_call:
    inputs:
      environment:
        required: false
        type: string
        default: development
      core_server_image_tag:
        type: string
        required: false
      web_service_image_tag:
        type: string
        required: false

  workflow_dispatch:
    inputs:
      environment:
        required: false
        default: development
      core_server_image_tag:
        required: false
      web_service_image_tag:
        required: false

jobs:
  terraform_apply:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    env:
      ECS_REGION: us-west-2
      AWS_ECS_ROLE_ARN: ${{ secrets.AWS_ECS_ROLE_ARN }}
      ENVIRONMENT: ${{ github.event.inputs.environment }}
      TF_VAR_core_rds_username: ${{ secrets.TF_VAR_CORE_RDS_USERNAME }}
      TF_VAR_core_rds_password: ${{ secrets.TF_VAR_CORE_RDS_PASSWORD }}
      TF_VAR_hosted_zone_id: ${{ secrets.TF_VAR_HOSTED_ZONE_ID }}
      TF_VAR_web_service_image_tag: ${{ github.event.inputs.web_service_image_tag }}
      TF_VAR_core_server_image_tag: ${{ github.event.inputs.core_server_image_tag }}

    permissions:
      contents: read
      id-token: write

    defaults:
      run:
        shell: bash
        working-directory: terraform

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials and Assume Role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.AWS_ECS_ROLE_ARN }}
          role-session-name: DeployWebService

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.10.4
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init

      - name: Get old web image tag
        run: |
          echo "TF_VAR_old_web_service_image_tag=$(terraform output -raw web_image_tag)" >> $GITHUB_ENV

      - name: Get old core server image tag
        run: |
          echo "TF_VAR_old_core_server_image_tag=$(terraform output -raw core_server_image_tag)" >> $GITHUB_ENV

      - name: Terraform Plan with Target
        run: terraform plan -out=plan.out

      - name: Terraform Apply with Target
        run: terraform apply -auto-approve -input=false plan.out
          
          
